name: KSSO  
on:
  workflow_dispatch:
jobs:
 build:
  name: Build
  runs-on: macos-latest
  strategy:
    fail-fast: false
    matrix:
      python-version:
        - 3.12
  timeout-minutes: 30
  outputs:
    version: ${{ steps.version.outputs.version }}
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache poetry dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/Library/Caches/pypoetry
          C:\Users\runneradmin\AppData\Local\pypoetry\Cache
        key: ${{ runner.os }}-${{ runner.arch }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-poetry-
    - name: Install poetry
      run: |
        python -m pip install poetry
      shell: bash
    - name: Build binary with pyinstaller
      run: |
        source $GITHUB_ENV
        os_name=$(echo ${{ runner.os }}   | tr '[:upper:]' '[:lower:]')
        os_arch=$(echo ${{ runner.arch }} | tr '[:upper:]' '[:lower:]')
        poetry run pyinstaller --target-architecture universal2 --add-data "ksso/success_message.html:ksso" --onefile ksso/main.py --name ksso-$os_name-$os_arch-$version
      shell: bash
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ksso-macos-latest-${{ env.version }}
        path: dist/ksso*
