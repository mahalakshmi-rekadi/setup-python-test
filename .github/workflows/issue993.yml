name: KSSO  
on:
  workflow_dispatch:
jobs:
 build:
  name: Build
  runs-on: macos-latest
  strategy:
    fail-fast: false
    matrix:
      python-version:
        - 3.12
  timeout-minutes: 30
  outputs:
    version: ${{ steps.version.outputs.version }}
  steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache poetry dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/Library/Caches/pypoetry
          key: ${{ runner.os }}-${{ runner.arch }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-poetry-
      - name: Install poetry
        run: |
          python -m pip install poetry
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi
      - name: Check for markupsafe package
        run: |
          python -m pip show markupsafe
      - name: Determine version
        id: version
        run: |
          version=$(poetry version --short)
          echo "version=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"
        shell: bash
      - name: Build binary with pyinstaller
        run: |
          source $GITHUB_ENV
          os_name=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
          os_arch=$(echo ${{ runner.arch }} | tr '[:upper:]' '[:lower:]')
          poetry run pyinstaller --add-data "ksso/success_message.html:ksso" --onefile ksso/main.py --name ksso-$os_name-$os_arch-$version
        shell: bash
